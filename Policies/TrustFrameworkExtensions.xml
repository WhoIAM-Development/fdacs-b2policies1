<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="{Settings:TenantShort}.onmicrosoft.com" PolicyId="B2C_1A_{Settings:PolicySet}TrustFrameworkExtensions" PublicPolicyUri="http://{Settings:TenantShort}.onmicrosoft.com/B2C_1A_{Settings:PolicySet}TrustFrameworkExtensions">

  <!-- Build Number: {Settings:Build.BuildNumber}_{Settings:Release.ReleaseName} -->

  <BasePolicy>
    <TenantId>{Settings:TenantShort}.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_{Settings:PolicySet}TrustFrameworkLocalization</PolicyId>
  </BasePolicy>

  <BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="dfp_device_deviceContextId">
        <DisplayName>Session ID</DisplayName>
        <DataType>string</DataType>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_user_language">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_email_isEmailValidated">
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="dfp_email_isEmailUsername">
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="dfp_device_ipAddress">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_Id">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_TransactionReferenceId">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_merchantRuleDecision">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_riskScore">
        <DataType>long</DataType>
      </ClaimType>

      <ClaimType Id="dfp_botScore">
        <DataType>long</DataType>
      </ClaimType>

      <ClaimType Id="dfp_riskScore_string">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_botScore_string">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_decision_constvalue_approve">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_StatusType">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_ReasonType">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_ChallengeType">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_CorrelationId">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_DeviceId">
        <DisplayName>Device ID</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_TrueIp">
        <DisplayName>True IP</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_DeviceCountryCode">
        <DisplayName>Country Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_DeviceState">
        <DisplayName>Device State</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_DeviceCity">
        <DisplayName>Device City</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_DevicePostalCode">
        <DisplayName>Device Postal Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_DeviceAsn">
        <DisplayName>ASN</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_Platform">
        <DisplayName>Device Platform</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_BrowserUserAgentLanguages">
        <DisplayName>Browser User Agent Languages</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_BrowserUserAgent">
        <DisplayName>Browser User Agent</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_TcpDistance">
        <DisplayName>TCP Distance</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_Carrier">
        <DisplayName>Carrier</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_IpRoutingType">
        <DisplayName>IP Routing Type</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_Proxy">
        <DisplayName>Proxy</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_UserAgentPlatform">
        <DisplayName>User Platform</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_UserAgentBrowser">
        <DisplayName>User Browser</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_UserAgentOperatingSystem">
        <DisplayName>User OS</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_EmailDomin">
        <DisplayName>Email Domain</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="dfp_EmailPattern">
        <DisplayName>Email Pattern</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="bearerToken">
        <DisplayName>Bearer token</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_Rule">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_ClauseName">
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="dfp_Observe_Log">
        <DisplayName>DFP Observe statement log</DisplayName>
        <DataType>string</DataType>
        <UserHelpText></UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="Apigrant_type">
        <DisplayName>Grant type</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="Apiscope">
        <DisplayName>scope</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="userMessage">
        <DisplayName>User message</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Add help text here</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="isActiveEmailSession">
        <DisplayName>isActiveEmailSession</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="isBreakAuthFlow">
        <DisplayName>Indicates whether the auth flow is breaked</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Break Auth Flow</AdminHelpText>
      </ClaimType>

      <ClaimType Id="Otp">
        <DisplayName>One-time password</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="VerificationCode">
        <DisplayName>Verification Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter your email verification code</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="logonIdentifier">
        <DisplayName>User name or email address that the user can use to sign in</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="companyname">
        <DisplayName>Company Name</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Name of the company you work for</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>

      <ClaimType Id="email.readOnly">
        <DisplayName>Email</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Email you entered</UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <!--MFA Claims-->

      <ClaimType Id="MFAOptions">
        <DisplayName>MFA Options</DisplayName>
        <DataType>string</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Authenticator App" Value="totp" SelectByDefault="false" />
          <Enumeration Text="SMS / Call" Value="sms" SelectByDefault="false" />
          <!-- <Enumeration Text="Email" Value="email" SelectByDefault="false" /> -->
        </Restriction>
      </ClaimType>

      <ClaimType Id="availablemfaOptions">
        <DisplayName>Available mfa Options</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="MFAOptions_Registration">
        <DisplayName>Select the multi-factor option(s) you would like to configure with your account.  It is recommended to setup more than one option.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>CheckboxMultiSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Authenticator App" Value="totp" SelectByDefault="false" />
          <Enumeration Text="SMS / Call" Value="sms" SelectByDefault="false" />
          <!-- <Enumeration Text="Email" Value="email" SelectByDefault="false" /> -->
        </Restriction>
      </ClaimType>

      <ClaimType Id="MFAOptions_Verification">
        <DisplayName>Select the multi-factor option you would like to verify.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>RadioSingleSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Authenticator App" Value="totp" SelectByDefault="false" />
          <Enumeration Text="SMS / Call" Value="sms" SelectByDefault="false" />
          <!-- <Enumeration Text="Email" Value="email" SelectByDefault="false" /> -->
        </Restriction>
      </ClaimType>

      <ClaimType Id="smsMFASelected">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="totpMFASelected">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="emailMFASelected">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="isMFAConfigurationSetupFlow">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="MFAOptionsStringCollection">
        <DisplayName>MFAOptions StringCollection</DisplayName>
        <DataType>stringCollection</DataType>
      </ClaimType>

      <ClaimType Id="MFAOptionsPartial">
        <DisplayName>MFAOptions string to be used to store currently completed mfa options as a comma delimited string</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>

      <ClaimType Id="MFAOptionsPartialStringCollection">
        <DisplayName>MFAOptions StringCollection to be used to store currently completed mfa options</DisplayName>
        <DataType>stringCollection</DataType>
      </ClaimType>

      <ClaimType Id="Verify_MFAOption_Phone">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="Verify_MFAOption_Email">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="Verify_MFAOption_TOTP">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="changeMfa_Action">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Add help text here</UserHelpText>
      </ClaimType>

      <ClaimType Id="ChangeMFA_AvailableActions">
        <DisplayName>Change MFA Available Actions</DisplayName>
        <DataType>stringCollection</DataType>
        <UserHelpText></UserHelpText>
      </ClaimType>

      <ClaimType Id="numberOfRegisteredMfa">
        <DisplayName>Number of registered MFA</DisplayName>
        <DataType>int</DataType>
      </ClaimType>

      <ClaimType Id="zeroClaim">
        <DisplayName>Set value of this claim to zero and copy to number of available and registered mfa claims</DisplayName>
        <DataType>int</DataType>
      </ClaimType>

      <ClaimType Id="Change_MFAOption_Phone">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="Change_MFAOption_TOTP">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="isActiveMfaSession-Any">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>

      <ClaimType Id="isSelectedMfaValid">
        <DisplayName></DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <!--MFA Claims ends-->


      <!-- #region TOTP claims-->

      <ClaimType Id="totpIdentifier">
        <DisplayName>UserId, Phone number or Email which can present the user's identity</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>UserId, Phone number or Email which can be used to create QR code identity.</AdminHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="numberOfAvailableDevices">
        <DisplayName>Number of available devices:</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="QrCodeScanInstruction">
        <DisplayName>Once you've downloaded the Authenticator app, you can use any of the methods below to continue with enrollment.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="QrCodeVerifyInstruction">
        <DisplayName>Enter the verification code from your authenticator app​.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="qrCodeContent">
        <DisplayName>QR Code Text</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>QR code text</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="secretKey">
        <DisplayName>If you cant't scan the image, enter the Secret Key:</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>QR code secret</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>

      <ClaimType Id="otpCode">
        <DisplayName>Enter your 6 digit code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter the 6-digit verification code generated by the the Authenticator app in the box</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[0-9]{6}$" HelpText="Enter the 6-digit verification code generated by the the Authenticator app in the box" />
        </Restriction>
      </ClaimType>

      <ClaimType Id="uriLabel">
        <DisplayName>Uri Label</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="issuer">
        <DisplayName>Issuer</DisplayName>
        <DataType>string</DataType>
      </ClaimType>

      <ClaimType Id="UserId">
        <DisplayName>Username</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText />
        <UserHelpText>Your username.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$" HelpText="The username you have provided is not valid. It must begin with an alphabetical character or number, and can only contain alphanumeric characters and the following symbols: _ -" />
        </Restriction>
      </ClaimType>

      <!-- #endregion TOTP Claims-->
    </ClaimsSchema>
    <ClaimsTransformations>

      <ClaimsTransformation Id="CreateDisplayNameFromFirstNameAndLastName" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{1}, {0}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>


      <ClaimsTransformation Id="AssertAuthFlowBroken" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isBreakAuthFlow" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateDfpRiskScoreString" TransformationMethod="ConvertNumberToStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="dfp_riskScore" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="dfp_riskScore_string" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateDfpBotScoreString" TransformationMethod="ConvertNumberToStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="dfp_botScore" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="dfp_botScore_string" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateSubjectClaimFromObjectID" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Not supported currently. Use oid claim." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sub" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateMessageSignupRejected" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Your sign-up was rejected by Fraud Protection." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userMessage" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateMessageSignInRejected" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Your sign-in was rejected by Fraud Protection." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userMessage" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CopyEmailtoEmailReadonly" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email.readOnly" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CopySignInNameEmailToEmail" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNames.emailAddress" TransformationClaimType="inputClaim"/>
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>

      <!-- MFA Option Transforms -->

      <ClaimsTransformation Id="CopyMfaOptionsToAvailableMfaOptions" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="availablemfaOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetAddToAvailableMfaActions" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="add" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetUpdateToAvailableMfaActions" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="update" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="SetRemoveToAvailableMfaActions" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="remove" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AutoIncrementNumberOfRegisteredMfa" TransformationMethod="AdjustNumber">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="numberOfRegisteredMfa" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="Operator" DataType="string" Value="INCREMENT" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="numberOfRegisteredMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CopyZeroClaimToNumberOfRegisteredMfa" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="zeroClaim" TransformationClaimType="inputClaim"/>
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="numberOfRegisteredMfa" TransformationClaimType="outputClaim"/>
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearPhoneWithTrailingCommaFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value="sms," />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearPhoneWithLeadingCommaFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="mfaOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value=",sms" />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="mfaOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearPhoneFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value="sms" />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearTotpWithTrailingCommaFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value="totp," />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearTotpWithLeadingCommaFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="mfaOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value=",totp" />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="mfaOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ClearTotpFromUserMfaOptions" TransformationMethod="StringReplace">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="oldValue" DataType="string" Value="totp" />
          <InputParameter Id="newValue" DataType="string" Value="" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CheckIfPhoneMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="sms" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="smsMFASelected" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CheckIfTOTPMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="totp" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpMFASelected" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CheckIfEmailMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="email" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="emailMFASelected" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="Verification-CheckIfEmailMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions_Verification" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="email" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Email" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="Verification-CheckIfPhoneMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions_Verification" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="sms" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Phone" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="Verification-CheckIfTOTPMFASelected" TransformationMethod="StringContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions_Verification" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="contains" DataType="string" Value="totp" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_TOTP" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ConvertMFAStringCollectionToCommaDelimiterString" TransformationMethod="StringJoin">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter DataType="string" Id="delimiter" Value="," />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ConvertMFAOptionsToStringCollection" TransformationMethod="StringSplit">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter DataType="string" Id="delimiter" Value="," />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AddSMStoMFAOptionsPartialCollection" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="sms" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AddTOTPtoMFAOptionsPartialCollection" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="totp" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AddEmailtoMFAOptionsPartialCollection" TransformationMethod="AddParameterToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="email" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ConvertMFAOptionsPartialStringCollectionToCommaDelimiterString" TransformationMethod="StringJoin">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter DataType="string" Id="delimiter" Value="," />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="ConvertMFAOptionsPartialToStringCollection" TransformationMethod="StringSplit">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsPartial" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter DataType="string" Id="delimiter" Value="," />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CopyMFAOptionsToMFAOptionsPartial" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptions" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="DoesAvailableMfaOptionsConatinSelectedMfa" TransformationMethod="StringCollectionContainsClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" TransformationClaimType="collection" />
          <InputClaim ClaimTypeReferenceId="MFAOptions_Verification" TransformationClaimType="item" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isSelectedMfaValid" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AssertSelectedMfaIsValid" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isSelectedMfaValid" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AutoselectMfaOptionPhoneIfAvailable" TransformationMethod="CompareBooleanClaimToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="smsMFASelected" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Phone" TransformationClaimType="compareResult"/>
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AutoselectMfaOptionTotpIfAvailable" TransformationMethod="CompareBooleanClaimToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="totpMFASelected" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_TOTP" TransformationClaimType="compareResult"/>
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="AutoselectMfaOptionEmailIfAvailable" TransformationMethod="CompareBooleanClaimToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="emailMFASelected" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Email" TransformationClaimType="compareResult"/>
        </OutputClaims>
      </ClaimsTransformation>

      <!-- MFA Option Transforms ends-->

      <!--TOTP Claim Transforms-->

      <!-- Create a TOPT secret key-->
      <ClaimsTransformation Id="CreateSecret" TransformationMethod="CreateOtpSecret">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="secretKey" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- Create the TOTP issuer name. The issuer name is your tenant name, such as "Contoso demo" -->
      <ClaimsTransformation Id="CreateIssuer" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="{AuthenticatorIssuer}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="issuer" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- Create the TOTP URI label. The label is a combination of the totpIdentifier and the issuer name:
           For example, Contoso demo:emily@fabrikam.com-->
      <ClaimsTransformation Id="CreateUriLabel" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="issuer" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}:{1}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="uriLabel" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- Create the TOTP URI. The label is a combination of the CreateUriLabel and the secret key:
      For example, otpauth://totp/Contoso%20demo:emily@fabrikam.com?secret=fay2lj7ynpntjgqa&issuer=Contoso+demo
      This URI is later conver  ted into a QR code that is presented to the user-->
      <ClaimsTransformation Id="CreateUriString" TransformationMethod="BuildUri">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="uriLabel" TransformationClaimType="path" />
          <InputClaim ClaimTypeReferenceId="secretKey" TransformationClaimType="query.secret" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="scheme" DataType="string" Value="otpauth" />
          <InputParameter Id="host" DataType="string" Value="totp" />
          <InputParameter Id="query.issuer" DataType="string" Value="{AuthenticatorIssuer}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="qrCodeContent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- Copy the signInName to the totpIdentifier -->
      <ClaimsTransformation Id="SignInNameToTotpIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInName" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <!-- Copy the email to the totpIdentifier -->
      <ClaimsTransformation Id="EmailToTotpIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>

      <ClaimsTransformation Id="CreateEmailFromOtherMails" TransformationMethod="GetSingleItemFromStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="extractedItem" />
        </OutputClaims>
      </ClaimsTransformation>
      <!--TOTP Claim Transforms Ends-->

    </ClaimsTransformations>

    <ContentDefinitions>

      <ContentDefinition Id="api.signuporsignin">
        <LoadUri>{Settings:UIBaseUrl}unified.html?SessionId={Context:CorrelationId}&amp;InstanceId={Settings:DFPInstanceId}&amp;ver={Settings:Build.BuildNumber}</LoadUri>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccountsignup">
        <LoadUri>{Settings:UIBaseUrl}selfAsserted.html?SessionId={Context:CorrelationId}&amp;InstanceId={Settings:DFPInstanceId}&amp;ver={Settings:Build.BuildNumber}</LoadUri>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccountpasswordreset">
        <LoadUri>{Settings:UIBaseUrl}selfAsserted.html?SessionId={Context:CorrelationId}&amp;InstanceId={Settings:DFPInstanceId}&amp;ver={Settings:Build.BuildNumber}</LoadUri>
      </ContentDefinition>

      <ContentDefinition Id="api.localaccountsignin">
        <LoadUri>{Settings:UIBaseUrl}selfAsserted.html?SessionId={Context:CorrelationId}&amp;InstanceId={Settings:DFPInstanceId}&amp;ver={Settings:Build.BuildNumber}</LoadUri>
      </ContentDefinition>

    </ContentDefinitions>

    <DisplayControls>
      <DisplayControl Id="emailVerificationControl" UserInterfaceControlType="VerificationControl">
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="verificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims></OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCode" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCode" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>

      <DisplayControl Id="emailVerificationControl-Verify" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email.readOnly" />
          <InputClaim ClaimTypeReferenceId="email" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email.readOnly" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="verificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email.readOnly" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCode" />
              <!-- <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtp" /> -->
              <!-- <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendOtp" /> -->
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCode" />
              <!-- <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtp" /> -->
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>

      <!-- Render the authenticator apps icon. -->
      <DisplayControl Id="authenticatorAppIconControl" UserInterfaceControlType="AuthenticatorAppIconControl" />

      <!-- Render the QR code. It takes the URI (qrCodeContent) input claim and renders it as a QR code-->
      <DisplayControl Id="totpQrCodeControl" UserInterfaceControlType="QrCodeControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="qrCodeContent" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="qrCodeContent" ControlClaimType="QrCodeContent" />
        </DisplayClaims>
      </DisplayControl>

      <!-- Render the TOTP information. It takes the totpIdentifier and the secretKey input claims and renders as a plan text-->
      <DisplayControl Id="authenticatorInfoControl" UserInterfaceControlType="AuthenticatorInfoControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="totpIdentifier" />
          <InputClaim ClaimTypeReferenceId="secretKey" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="totpIdentifier" />
          <DisplayClaim ClaimTypeReferenceId="secretKey" />
        </DisplayClaims>
      </DisplayControl>

    </DisplayControls>

  </BuildingBlocks>

  <ClaimsProviders>

    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="login-NonInteractive">
          <Metadata>
            <Item Key="client_id">{Settings:AzureProxyIEFAppId}</Item>
            <Item Key="IdTokenAudience">{Settings:AzureIEFAppId}</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="client_id" DefaultValue="{Settings:AzureProxyIEFAppId}" />
            <InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="{Settings:AzureIEFAppId}" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>


    <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="AAD-Common">
          <Metadata>
            <Item Key="ApplicationObjectId">{Settings:ExtensionsAppObjectId}</Item>
            <Item Key="ClientId">{Settings:ExtensionsAppId}</Item>
          </Metadata>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWriteMFAOptionsPartialUsingObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="MFAOptionsPartial" PartnerClaimType="extension_MfaOptions" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" PartnerClaimType="extension_MfaOptions" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWritePhoneNumberAndMFAOptionPartialUsingObjectId">          
          <PersistedClaims>            
            <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="strongAuthenticationPhoneNumber" />            
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-UserWriteMFAOptionsPartialUsingObjectId"/>          
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWriteProfileUsingObjectId">
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateDisplayNameFromFirstNameAndLastName" />
          </InputClaimsTransformations>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="displayName" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="displayName" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWriteUsingLogonEmail">
          <PersistedClaims>
            <!-- Required claims -->
            <PersistedClaim ClaimTypeReferenceId="companyName" PartnerClaimType="extension_companyName" />
          </PersistedClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="companyName" PartnerClaimType="extension_companyName" />
            <OutputClaim ClaimTypeReferenceId="MFAOptions" PartnerClaimType="extension_MfaOptions" />            
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingEmailAddress">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="MFAOptions" PartnerClaimType="extension_MfaOptions" />            
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CopySignInNameEmailToEmail" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Rest APIs</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="REST-AcquireAccessToken">
          <DisplayName>Acquire Token</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">https://login.microsoftonline.com/{Settings:IntermediateApiAccessTokenTenantId}/oauth2/v2.0/token</Item>
            <Item Key="AuthenticationType">Basic</Item>
            <Item Key="SendClaimsIn">Form</Item>
            <Item Key="AllowInsecureAuthInProduction">False</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="BasicAuthenticationUsername" StorageReferenceId="{Settings:IntermediateApiAccessTokenClientIdName}" />
            <Key Id="BasicAuthenticationPassword" StorageReferenceId="{Settings:IntermediateApiAccessTokenClientSecretName}" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="Apigrant_type" PartnerClaimType="grant_type" DefaultValue="client_credentials" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="Apiscope" PartnerClaimType="scope" DefaultValue="{Settings:IntermediateApiAccessTokenScope}" AlwaysUseDefaultValue="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="bearerToken" PartnerClaimType="access_token" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-CreateAccount">
          <DisplayName>DFP Create Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">{Settings:IntermediateAppUrl}/api/Dfp/CreateAccount</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">True</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="UseClaimAsBearerToken">bearerToken</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="bearerToken" />
            <InputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="FirstName" />
            <InputClaim ClaimTypeReferenceId="surname" PartnerClaimType="LastName" />
            <InputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="DisplayName" />
            <InputClaim ClaimTypeReferenceId="dfp_user_language" PartnerClaimType="Language" DefaultValue="{Culture:RFC5646}" />
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="Email" />
            <InputClaim ClaimTypeReferenceId="dfp_email_isEmailUsername" PartnerClaimType="IsEmailUsername" />
            <InputClaim ClaimTypeReferenceId="dfp_email_isEmailValidated" PartnerClaimType="IsEmailValidated" />
            <InputClaim ClaimTypeReferenceId="dfp_device_ipAddress" PartnerClaimType="IpAddress" DefaultValue="{Context:IPAddress}"/>
            <InputClaim ClaimTypeReferenceId="dfp_device_deviceContextId" PartnerClaimType="DeviceContextId" DefaultValue="{Context:CorrelationId}"/>
            <InputClaim ClaimTypeReferenceId="authenticationSource" PartnerClaimType="AuthenticationProvider"/>
          </InputClaims>
          <OutputClaims>
            <!-- Optional claims, to be collected from the user -->
            <OutputClaim ClaimTypeReferenceId="dfp_Id" PartnerClaimType="SignUpId" />
            <OutputClaim ClaimTypeReferenceId="dfp_TransactionReferenceId" PartnerClaimType="TransactionReferenceId" />
            <OutputClaim ClaimTypeReferenceId="dfp_merchantRuleDecision" PartnerClaimType="Decision"/>
            <OutputClaim ClaimTypeReferenceId="dfp_CorrelationId" PartnerClaimType="correlationId" />
            <OutputClaim ClaimTypeReferenceId="dfp_riskScore" PartnerClaimType="RiskScore"/>
            <OutputClaim ClaimTypeReferenceId="dfp_botScore" PartnerClaimType="BotScore"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceId" PartnerClaimType="DeviceId"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TrueIp" PartnerClaimType="TrueIp"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCountryCode" PartnerClaimType="DeviceCountryCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceState" PartnerClaimType="DeviceState"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCity" PartnerClaimType="DeviceCity"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DevicePostalCode" PartnerClaimType="DevicePostalCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceAsn" PartnerClaimType="DeviceAsn"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Platform" PartnerClaimType="Platform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgentLanguages" PartnerClaimType="BrowserUserAgentLanguages"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgent" PartnerClaimType="BrowserUserAgent"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TcpDistance" PartnerClaimType="TcpDistance"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Carrier" PartnerClaimType="Carrier"/>
            <OutputClaim ClaimTypeReferenceId="dfp_IpRoutingType" PartnerClaimType="IpRoutingType"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Proxy" PartnerClaimType="Proxy"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentPlatform" PartnerClaimType="UserAgentPlatform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentBrowser" PartnerClaimType="UserAgentBrowser"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentOperatingSystem" PartnerClaimType="UserAgentOperatingSystem"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailDomin" PartnerClaimType="EmailDomin"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailPattern" PartnerClaimType="EmailPattern"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateDfpRiskScoreString"/>
            <OutputClaimsTransformation ReferenceId="CreateDfpBotScoreString"/>
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-CreateAccountStatus">
          <DisplayName>DFP Create Status</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">{Settings:IntermediateAppUrl}/api/Dfp/CreateAccountStatus</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">True</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="UseClaimAsBearerToken">bearerToken</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="bearerToken" />
            <InputClaim ClaimTypeReferenceId="dfp_Id" PartnerClaimType="SignUpId" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="UserId" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="dfp_CorrelationId" PartnerClaimType="correlationId" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-CreateAccountStatus-Rejected">
          <DisplayName>DFP Create Status - Reject</DisplayName>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dfp_StatusType" PartnerClaimType="StatusType" DefaultValue="Rejected"/>
            <InputClaim ClaimTypeReferenceId="dfp_ReasonType" PartnerClaimType="ReasonType" DefaultValue="None" />
            <InputClaim ClaimTypeReferenceId="dfp_ChallengeType" PartnerClaimType="ChallengeType" DefaultValue="None" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="RestApi-DFP-CreateAccountStatus"/>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>



        <TechnicalProfile Id="RestApi-DFP-CreateAccountStatus-Approved">
          <DisplayName>DFP Create Status - Approved</DisplayName>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dfp_StatusType" PartnerClaimType="StatusType" DefaultValue="Approved"/>
            <InputClaim ClaimTypeReferenceId="dfp_ReasonType" PartnerClaimType="ReasonType" DefaultValue="None" />
            <InputClaim ClaimTypeReferenceId="dfp_ChallengeType" PartnerClaimType="ChallengeType" DefaultValue="None" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="RestApi-DFP-CreateAccountStatus"/>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-LoginAccount">
          <DisplayName>DFP Login Account</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">{Settings:IntermediateAppUrl}/api/Dfp/LoginAccount</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">True</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="UseClaimAsBearerToken">bearerToken</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="bearerToken" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="UserId"/>
            <InputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="DisplayName" />
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="Email" />
            <InputClaim ClaimTypeReferenceId="dfp_device_ipAddress" PartnerClaimType="IpAddress" DefaultValue="{Context:IPAddress}"/>
            <InputClaim ClaimTypeReferenceId="dfp_device_deviceContextId" PartnerClaimType="DeviceContextId" DefaultValue="{Context:CorrelationId}"/>
          </InputClaims>
          <OutputClaims>
            <!-- Optional claims, to be collected from the user -->
            <OutputClaim ClaimTypeReferenceId="dfp_Id" PartnerClaimType="LoginId" />
            <OutputClaim ClaimTypeReferenceId="dfp_merchantRuleDecision" PartnerClaimType="Decision"/>
            <OutputClaim ClaimTypeReferenceId="dfp_CorrelationId" PartnerClaimType="correlationId" />
            <OutputClaim ClaimTypeReferenceId="dfp_riskScore" PartnerClaimType="RiskScore"/>
            <OutputClaim ClaimTypeReferenceId="dfp_botScore" PartnerClaimType="BotScore"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceId" PartnerClaimType="DeviceId"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TrueIp" PartnerClaimType="TrueIp"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCountryCode" PartnerClaimType="DeviceCountryCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceState" PartnerClaimType="DeviceState"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCity" PartnerClaimType="DeviceCity"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DevicePostalCode" PartnerClaimType="DevicePostalCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceAsn" PartnerClaimType="DeviceAsn"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Platform" PartnerClaimType="Platform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgentLanguages" PartnerClaimType="BrowserUserAgentLanguages"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgent" PartnerClaimType="BrowserUserAgent"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TcpDistance" PartnerClaimType="TcpDistance"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Carrier" PartnerClaimType="Carrier"/>
            <OutputClaim ClaimTypeReferenceId="dfp_IpRoutingType" PartnerClaimType="IpRoutingType"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Proxy" PartnerClaimType="Proxy"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentPlatform" PartnerClaimType="UserAgentPlatform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentBrowser" PartnerClaimType="UserAgentBrowser"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentOperatingSystem" PartnerClaimType="UserAgentOperatingSystem"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailDomin" PartnerClaimType="EmailDomin"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailPattern" PartnerClaimType="EmailPattern"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Rule" PartnerClaimType="Rule"/>
            <OutputClaim ClaimTypeReferenceId="dfp_ClauseName" PartnerClaimType="ClauseName"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Observe_Log" PartnerClaimType="ObserveLog"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateDfpRiskScoreString"/>
            <OutputClaimsTransformation ReferenceId="CreateDfpBotScoreString"/>
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-LoginAccountStatus">
          <DisplayName>DFP Create Status</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ServiceUrl">{Settings:IntermediateAppUrl}/api/Dfp/LoginAccountStatus</Item>
            <Item Key="AuthenticationType">Bearer</Item>
            <Item Key="SendClaimsIn">Body</Item>
            <Item Key="AllowInsecureAuthInProduction">True</Item>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
            <Item Key="UseClaimAsBearerToken">bearerToken</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="bearerToken" />
            <InputClaim ClaimTypeReferenceId="dfp_Id" PartnerClaimType="LoginId" />
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="UserId" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="dfp_CorrelationId" PartnerClaimType="correlationId" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-LoginAccountStatus-Rejected">
          <DisplayName>DFP Create Status - Reject</DisplayName>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dfp_StatusType" PartnerClaimType="StatusType" DefaultValue="Rejected" AlwaysUseDefaultValue="true"/>
            <InputClaim ClaimTypeReferenceId="dfp_ReasonType" PartnerClaimType="ReasonType" DefaultValue="None" />
            <InputClaim ClaimTypeReferenceId="dfp_ChallengeType" PartnerClaimType="ChallengeType" DefaultValue="None" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="RestApi-DFP-LoginAccountStatus"/>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-LoginAccountStatus-Approved">
          <DisplayName>DFP Create Status - Approved</DisplayName>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dfp_StatusType" PartnerClaimType="StatusType" DefaultValue="Approved" AlwaysUseDefaultValue="true"/>
            <InputClaim ClaimTypeReferenceId="dfp_ReasonType" PartnerClaimType="ReasonType" DefaultValue="None" />
            <InputClaim ClaimTypeReferenceId="dfp_ChallengeType" PartnerClaimType="ChallengeType" DefaultValue="None" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="RestApi-DFP-LoginAccountStatus"/>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RestApi-DFP-LoginAccountStatus-Pending">
          <DisplayName>DFP Create Status - Pending</DisplayName>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="dfp_StatusType" PartnerClaimType="StatusType" DefaultValue="Pending" AlwaysUseDefaultValue="true"/>
            <InputClaim ClaimTypeReferenceId="dfp_ReasonType" PartnerClaimType="ReasonType" DefaultValue="None" />
            <InputClaim ClaimTypeReferenceId="dfp_ChallengeType" PartnerClaimType="ChallengeType" DefaultValue="None" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="RestApi-DFP-LoginAccountStatus"/>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

      </TechnicalProfiles>

    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="SelfAsserted-ShowMessage-SignupRejected">
          <DisplayName>ShowMessage-SignupRejected</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Your sign-up was rejected by Fraud Protection.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateMessageSignupRejected" />
          </InputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="SelfAsserted-ShowMessage"/>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-ShowMessage-SignInRejected">
          <DisplayName>ShowMessage-SignInRejected</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Your sign-in was rejected by Fraud Protection.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateMessageSignInRejected" />
          </InputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="SelfAsserted-ShowMessage"/>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-ShowMessage">
          <DisplayName>Show Message</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="setting.showContinueButton">false</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userMessage"/>
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="userMessage"/>
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userMessage"/>
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="BreakAuthFlow" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccountDiscoveryUsingEmailAddress-Custom">
          <DisplayName>Reset password using email address</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordreset</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <IncludeInSso>false</IncludeInSso>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email"/>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />

            <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
            <OutputClaim ClaimTypeReferenceId="isActiveEmailSession" DefaultValue="true" AlwaysUseDefaultValue="true"/>
            <OutputClaim ClaimTypeReferenceId="MFAOptions" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingEmailAddress" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccountSignUpWithLogonEmail-DFP">
          <DisplayName>Email signup</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountsignup</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl" />
            <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="givenName" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="surName" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="companyname" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="email" />
            <OutputClaim ClaimTypeReferenceId="newPassword"/>
            <OutputClaim ClaimTypeReferenceId="reenterPassword"/>
            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" />
            <OutputClaim ClaimTypeReferenceId="newUser" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />

            <!-- Optional claims, to be collected from the user -->
            <OutputClaim ClaimTypeReferenceId="displayName"/>
            <OutputClaim ClaimTypeReferenceId="givenName" />
            <OutputClaim ClaimTypeReferenceId="surName" />

            <OutputClaim ClaimTypeReferenceId="isActiveEmailSession" DefaultValue="true" AlwaysUseDefaultValue="true"/>

            <OutputClaim ClaimTypeReferenceId="dfp_merchantRuleDecision" />
            <OutputClaim ClaimTypeReferenceId="dfp_Id" />
            <OutputClaim ClaimTypeReferenceId="dfp_TransactionReferenceId"/>
            <OutputClaim ClaimTypeReferenceId="dfp_botScore" />
            <OutputClaim ClaimTypeReferenceId="dfp_riskScore" />
            <OutputClaim ClaimTypeReferenceId="dfp_botScore_string" />
            <OutputClaim ClaimTypeReferenceId="dfp_riskScore_string" />
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceId"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TrueIp"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCountryCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceState"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceCity"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DevicePostalCode"/>
            <OutputClaim ClaimTypeReferenceId="dfp_DeviceAsn"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Platform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgentLanguages"/>
            <OutputClaim ClaimTypeReferenceId="dfp_BrowserUserAgent"/>
            <OutputClaim ClaimTypeReferenceId="dfp_TcpDistance"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Carrier"/>
            <OutputClaim ClaimTypeReferenceId="dfp_IpRoutingType"/>
            <OutputClaim ClaimTypeReferenceId="dfp_Proxy"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentPlatform"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentBrowser"/>
            <OutputClaim ClaimTypeReferenceId="dfp_UserAgentOperatingSystem"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailDomin"/>
            <OutputClaim ClaimTypeReferenceId="dfp_EmailPattern"/>
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="REST-AcquireAccessToken" />

            <ValidationTechnicalProfile ReferenceId="RestApi-DFP-CreateAccount" />

            <ValidationTechnicalProfile ReferenceId="RestApi-DFP-CreateAccountStatus-Rejected">
              <Preconditions>
                <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Value>Reject</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>

            <ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingLogonEmail">
              <Preconditions>
                <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Value>Reject</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>

            <ValidationTechnicalProfile ReferenceId="RestApi-DFP-CreateAccountStatus-Approved">
              <Preconditions>
                <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
                <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                  <Value>dfp_merchantRuleDecision</Value>
                  <Value>Reject</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccount-VerifyEmail-NoSSO">
          <DisplayName>verify email address</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CopyEmailtoEmailReadonly" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email"/>
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl-Verify" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email"/>
            <OutputClaim ClaimTypeReferenceId="isActiveEmailSession" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Claims Transformation</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="BreakAuthFlow">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="isBreakAuthFlow" DefaultValue="true"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="isBreakAuthFlow" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AssertAuthFlowBroken" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="ValidateSelectedMfaOption">
          <DisplayName>Validate Selected MfaOption</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptions_Verification" />
            <InputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptions_Verification" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="DoesAvailableMfaOptionsConatinSelectedMfa" />
            <OutputClaimsTransformation ReferenceId="AssertSelectedMfaIsValid" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="MFA-Verify-AutoSelect">
          <DisplayName>MFA Verify AutoSelect</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="emailMFASelected" />
            <InputClaim ClaimTypeReferenceId="smsMFASelected" />
            <InputClaim ClaimTypeReferenceId="totpMFASelected" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Phone" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_TOTP" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Email" DefaultValue="false"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AutoselectMfaOptionPhoneIfAvailable" />
            <OutputClaimsTransformation ReferenceId="AutoselectMfaOptionTotpIfAvailable" />
            <OutputClaimsTransformation ReferenceId="AutoselectMfaOptionEmailIfAvailable" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>TOTP Claim providers</DisplayName>
      <TechnicalProfiles>

        <!-- Begin the TOTP verification process.
              This technical profile is called right before the AzureMfa-VerifyOTP technical profile-->
        <TechnicalProfile Id="AzureMfa-BeginVerifyOTP">
          <DisplayName>Create Device</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureMfaProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">BeginVerifyOTP</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="secretKey" />
            <InputClaim ClaimTypeReferenceId="objectId" />
            <InputClaim ClaimTypeReferenceId="userPrincipalName" />
          </InputClaims>
        </TechnicalProfile>

        <!-- Verify the TOTP verification process.
              This technical profile is called immediately after the AzureMfa-BeginVerifyOTP technical profile-->
        <TechnicalProfile Id="AzureMfa-VerifyOTP">
          <DisplayName>Verify OTP</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureMfaProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyOTP</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="otpCode" />
          </InputClaims>
        </TechnicalProfile>

        <!-- Check the number of devices available for the user.
              If the number of available devices is zero it indicates the user hasn't enrolled yet -->
        <TechnicalProfile Id="AzureMfa-GetAvailableDevices">
          <DisplayName>Get Available Devices</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureMfaProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">GetAvailableDevices</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userPrincipalName" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="numberOfAvailableDevices" />
          </OutputClaims>
        </TechnicalProfile>

        <!-- TOTP session manager-->
        <TechnicalProfile Id="SM-MFA-TOTP">
          <DisplayName>Session Mananagement Provider</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.SSO.DefaultSSOSessionProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="totpIdentifier" />
            <PersistedClaim ClaimTypeReferenceId="issuer" />
          </PersistedClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="EnableOTPAuthentication-NoSSO">
          <IncludeTechnicalProfile ReferenceId="EnableOTPAuthentication" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <!-- Self-asserted technical profile that asks the user to enroll to the TOTP MFA. The technical profile:
                1) Creates the TOTP secret
                2) Sets the issuer name and the URI
                3) Renders the QR code and the authentication URI
              -->
        <TechnicalProfile Id="EnableOTPAuthentication">
          <DisplayName>Sign up with Authenticator app</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.totp.register</Item>
            <Item Key="language.button_continue">Continue</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="CreateSecret" />
            <InputClaimsTransformation ReferenceId="CreateIssuer" />
            <InputClaimsTransformation ReferenceId="CreateUriLabel" />
            <InputClaimsTransformation ReferenceId="CreateUriString" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="qrCodeContent" />
            <InputClaim ClaimTypeReferenceId="secretKey" />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="authenticatorAppIconControl" />
            <DisplayClaim ClaimTypeReferenceId="QrCodeScanInstruction" />
            <DisplayClaim DisplayControlReferenceId="totpQrCodeControl" />
            <DisplayClaim DisplayControlReferenceId="authenticatorInfoControl" />

            <DisplayClaim ClaimTypeReferenceId="otpCode" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="secretKey" />

            <OutputClaim ClaimTypeReferenceId="otpCode" Required="true" />

          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureMfa-BeginVerifyOTP" />
            <ValidationTechnicalProfile ReferenceId="AzureMfa-VerifyOTP" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA-TOTP" />
        </TechnicalProfile>

        <TechnicalProfile Id="OTPVerification-NoSSO">
          <IncludeTechnicalProfile ReferenceId="OTPVerification" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <!-- Self-asserted technical profile that verifies the TOTP-->

        <TechnicalProfile Id="OTPVerification">
          <DisplayName>Sign in with Authenticator app</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.totp.verify</Item>
            <Item Key="language.button_continue">Verify</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="QrCodeVerifyInstruction" DefaultValue="To complete the authentication process, please enter the verification code from your authenticator app." />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="QrCodeVerifyInstruction" />
            <DisplayClaim ClaimTypeReferenceId="otpCode" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="otpCode" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AzureMfa-BeginVerifyOTP" />
            <ValidationTechnicalProfile ReferenceId="AzureMfa-VerifyOTP" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-MFA-TOTP" />
        </TechnicalProfile>

        <!-- Set the number of devices to 0 (default value) -->
        <TechnicalProfile Id="SetTotpDefaultValue">
          <DisplayName>Set Totp Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="numberOfAvailableDevices" DefaultValue="0" />
          </OutputClaims>
        </TechnicalProfile>

        <!-- Copy the SignInName to the totpIdentifier -->
        <TechnicalProfile Id="CreateTotpIdentifier-SignInName">
          <DisplayName>Set Totp Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="totpIdentifier" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SignInNameToTotpIdentifier" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <!-- Copy the Email to the totpIdentifier -->
        <TechnicalProfile Id="CreateTotpIdentifier-Email">
          <DisplayName>Set Totp Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="totpIdentifier" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="EmailToTotpIdentifier" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="CreateTotpIdentifier-OtherMail">
          <DisplayName>Set Totp Default Values</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="totpIdentifier" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateEmailFromOtherMails" />
            <OutputClaimsTransformation ReferenceId="EmailToTotpIdentifier" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <!--end of TOTP-->
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Multi-Factor Authentication Technical profiles</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="TP-EnforceMfaExecuted">
          <DisplayName>TP-EnforceMfaExecuted</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="isActiveMfaSession-Any" DefaultValue="true" AlwaysUseDefaultValue="true" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="TP-AddTOTPToMFAOptionsPartialCollection">
          <DisplayName>AddTOTPToMFAOptionsPartialCollection</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="AddTOTPtoMFAOptionsPartialCollection" />
            <InputClaimsTransformation ReferenceId="ConvertMFAOptionsPartialStringCollectionToCommaDelimiterString" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="TP-AddEmailToMFAOptionsPartialCollection">
          <DisplayName>AddEmailToMFAOptionsPartialCollection</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="AddEmailtoMFAOptionsPartialCollection" />
            <InputClaimsTransformation ReferenceId="ConvertMFAOptionsPartialStringCollectionToCommaDelimiterString" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </OutputClaims>
        </TechnicalProfile>

         <TechnicalProfile Id="TP-AddSMSToMFAOptionsPartialCollection">
          <DisplayName>AddSMSToMFAOptionsPartialCollection</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
          </Metadata>
          <InputClaimsTransformations>
            <InputClaimsTransformation ReferenceId="AddSMStoMFAOptionsPartialCollection" />
            <InputClaimsTransformation ReferenceId="ConvertMFAOptionsPartialStringCollectionToCommaDelimiterString" />
          </InputClaimsTransformations>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <InputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="TP-SetSmsMfaSelected">
          <DisplayName>TP-SetSmsMfaSelected</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="smsMfaSelected" DefaultValue="true" AlwaysUseDefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="isMFAConfigurationSetupFlow" DefaultValue="true" AlwaysUseDefaultValue="true" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="TP-SetTotpMfaSelected">
          <DisplayName>TP-SetTotpMfaSelected</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="totpMfaSelected" DefaultValue="true" AlwaysUseDefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="isMFAConfigurationSetupFlow" DefaultValue="true" AlwaysUseDefaultValue="true" />
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="SelfAsserted-ShowMessage-MfaUpdateSuccessful">
          <DisplayName>Get email</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="setting.showCancelButton">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userMessage" DefaultValue ="Your update has been made. We will now redirect you to the application." AlwaysUseDefaultValue="true"/>
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userMessage" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="IncrementNumberOfRegisteredMfa">
          <DisplayName>Set number Of registered Mfa default value</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="numberOfRegisteredMfa"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AutoIncrementNumberOfRegisteredMfa" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="SetAvailableMfaActions-Add">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetAddToAvailableMfaActions" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SetAvailableMfaActions-Update">
          <DisplayName>SetAvailableMfaActions-Update</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetUpdateToAvailableMfaActions" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SetAvailableMfaActions-Add-Update">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetAddToAvailableMfaActions" />
            <OutputClaimsTransformation ReferenceId="SetUpdateToAvailableMfaActions" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SetAvailableMfaActions-Add-Update-Remove">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetAddToAvailableMfaActions" />
            <OutputClaimsTransformation ReferenceId="SetUpdateToAvailableMfaActions" />
            <OutputClaimsTransformation ReferenceId="SetRemoveToAvailableMfaActions" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SetAvailableMfaActions-Update-Remove">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_AvailableActions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="SetUpdateToAvailableMfaActions" />
            <OutputClaimsTransformation ReferenceId="SetRemoveToAvailableMfaActions" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="SetRegisteredMFADefaultValue">
          <DisplayName>Set Number Of registered Mfa Default Value</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="zeroClaim" DefaultValue="0" AlwaysUseDefaultValue="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="numberOfRegisteredMfa" DefaultValue="0" />
            <OutputClaim ClaimTypeReferenceId="smsMFASelected" DefaultValue="false" />
            <OutputClaim ClaimTypeReferenceId="totpMFASelected" DefaultValue="false" />
            <!-- <OutputClaim ClaimTypeReferenceId="emailMFASelected" DefaultValue="false" /> -->
          </OutputClaims>
          <OutputClaimsTransformations>
            <!-- on page refresh, numberOfRegisteredMfa get messed up. Hence ensuring the value is reset to zero.   -->
            <OutputClaimsTransformation ReferenceId="CopyZeroClaimToNumberOfRegisteredMfa" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

        <TechnicalProfile Id="SetChangeMfaAction-Add">
          <DisplayName>Add</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">changeMfa_AvailableActions</Item>
            <Item Key="ClaimValueOnWhichToEnable">add</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_Action" DefaultValue="add" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="SetChangeMfaAction-Update">
          <DisplayName>Update</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">changeMfa_AvailableActions</Item>
            <Item Key="ClaimValueOnWhichToEnable">update</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_Action" DefaultValue="update" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="SetChangeMfaAction-Remove">
          <DisplayName>Remove</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">changeMfa_AvailableActions</Item>
            <Item Key="ClaimValueOnWhichToEnable">remove</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="changeMfa_Action" DefaultValue="remove" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="ChangeMfa-SetMfaOption-Phone">
          <DisplayName>SMS / Call</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">sms</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Change_MFAOption_Phone" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="ChangeMfa-SetMfaOption-Totp">
          <DisplayName>Authenticator App</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">totp</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Change_MFAOption_TOTP" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="ChangeMfa-SetMfaOption-Phone-IfAbsent">
          <DisplayName>SMS / Call</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">sms</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Change_MFAOption_Phone" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="ChangeMfa-SetMfaOption-Totp-IfAbsent">
          <DisplayName>Authenticator App</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">totp</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Change_MFAOption_TOTP" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="TP-SetMFASetupFlow">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="isMFAConfigurationSetupFlow" DefaultValue="true" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="TP-CopyMFAOptionsToMFAOptionsPartial">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptions" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartial" />
            <OutputClaim ClaimTypeReferenceId="MFAOptionsPartialStringCollection" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CopyMFAOptionsToMFAOptionsPartial" />
            <OutputClaimsTransformation ReferenceId="ConvertMFAOptionsPartialToStringCollection" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RemovePhoneFromUserMfaOptions">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ClearPhoneWithTrailingCommaFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ClearPhoneWithLeadingCommaFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ClearPhoneFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ConvertMFAOptionsToStringCollection" />
            <OutputClaimsTransformation ReferenceId="ConvertMFAStringCollectionToCommaDelimiterString" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="RemoveTotpFromUserMfaOptions">
          <DisplayName>Validate Member Hash</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptions" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ClearTotpWithTrailingCommaFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ClearTotpWithLeadingCommaFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ClearTotpFromUserMfaOptions" />
            <OutputClaimsTransformation ReferenceId="ConvertMFAOptionsToStringCollection" />
            <OutputClaimsTransformation ReferenceId="ConvertMFAStringCollectionToCommaDelimiterString" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="ExtractRegisteredMfaFromMfaOptionsCollection">
          <DisplayName>Extract Registered Mfa From Mfa Options Collection</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="smsMFASelected" />
            <OutputClaim ClaimTypeReferenceId="totpMFASelected" />
            <OutputClaim ClaimTypeReferenceId="emailMFASelected" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CheckIfTOTPMFASelected" />
            <OutputClaimsTransformation ReferenceId="CheckIfPhoneMFASelected" />
            <OutputClaimsTransformation ReferenceId="CheckIfEmailMFASelected" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="GetRegisteredMfaOptionsCollection">
          <DisplayName>GetRegisteredMfaOptionsCollection</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="MFAOptions" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptionsStringCollection" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ConvertMFAOptionsToStringCollection" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="VerifyMFA-SetMfaOption-Phone">
          <DisplayName>SMS / Call</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">sms</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Phone" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="VerifyMFA-SetMfaOption-Totp">
          <DisplayName>Authenticator App</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ClaimTypeOnWhichToEnable">MFAOptionsStringCollection</Item>
            <Item Key="ClaimValueOnWhichToEnable">totp</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_TOTP" DefaultValue="true" AlwaysUseDefaultValue="true"/>
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="MFA-Register-Select">
          <DisplayName>App Factor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.mfa.choosemfa</Item>
            <Item Key="setting.inputVerificationDelayTimeInMilliseconds">10</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="MFAOptions" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptions" />
            <OutputClaim ClaimTypeReferenceId="smsMFASelected" />
            <OutputClaim ClaimTypeReferenceId="totpMFASelected" />
            <OutputClaim ClaimTypeReferenceId="emailMFASelected" />
            <OutputClaim ClaimTypeReferenceId="isMFAConfigurationSetupFlow" DefaultValue="true" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CheckIfPhoneMFASelected" />
            <OutputClaimsTransformation ReferenceId="CheckIfTOTPMFASelected" />
            <OutputClaimsTransformation ReferenceId="CheckIfEmailMFASelected" />
          </OutputClaimsTransformations>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD" />
        </TechnicalProfile>

        <TechnicalProfile Id="MFA-Register-Select-NoSSO">
          <DisplayName>App Factor</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <IncludeTechnicalProfile ReferenceId="MFA-Register-Select" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-ClearMfaUsingObjectId">
          <Metadata>
            <Item Key="Operation">DeleteClaims</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
            <PersistedClaim ClaimTypeReferenceId="MFAOptions" PartnerClaimType="extension_MfaOptions" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="MFAOptions" PartnerClaimType="extension_MfaOptions" DefaultValue="" AlwaysUseDefaultValue="true" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-WriteMfaOptionsUsingObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="MFAOptions" PartnerClaimType="extension_MfaOptions" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="MFA-Verify-Select">
          <DisplayName>Show Mfa Options</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.mfa.choosemfa</Item>
            <Item Key="setting.showContinueButton">true</Item>
            <Item Key="setting.showCancelButton">true</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">The option you've selected is an invalid one.</Item>
          </Metadata>
          <IncludeInSso>false</IncludeInSso>
          <InputClaimsTransformations>
            <!-- <InputClaimsTransformation ReferenceId="CopyEmailtoMaskedEmail"/>
            <InputClaimsTransformation ReferenceId="CopyPhoneNumberToMaskedPhoneNumber"/>
            <InputClaimsTransformation ReferenceId="ConvertAvailableMfaOptionsCollectionToavailablemfaOptions"/> -->
            <InputClaimsTransformation ReferenceId="CopyMfaOptionsToAvailableMfaOptions"/>
          </InputClaimsTransformations>
          <InputClaims>
            <!-- <InputClaim ClaimTypeReferenceId="maskedEmail"/>
            <InputClaim ClaimTypeReferenceId="maskedPhoneNumber"/> -->
            <InputClaim ClaimTypeReferenceId="MFAOptionsStringCollection"/>
            <InputClaim ClaimTypeReferenceId="availablemfaOptions"/>
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="MFAOptions_Verification" Required="true"/>
            <DisplayClaim ClaimTypeReferenceId="availablemfaOptions"/>

            <!-- <DisplayClaim ClaimTypeReferenceId="maskedEmail"/>
            <DisplayClaim ClaimTypeReferenceId="maskedPhoneNumber"/> -->
          </DisplayClaims>
          <OutputClaims>
            <!-- <OutputClaim ClaimTypeReferenceId="availablemfaOptions"/>
            <OutputClaim ClaimTypeReferenceId="mfaOptions"/> -->
            <OutputClaim ClaimTypeReferenceId="MFAOptions_Verification"/>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Email" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_Phone" DefaultValue="false"/>
            <OutputClaim ClaimTypeReferenceId="Verify_MFAOption_TOTP" DefaultValue="false"/>
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="Verification-CheckIfEmailMFASelected" />
            <OutputClaimsTransformation ReferenceId="Verification-CheckIfPhoneMFASelected" />
            <OutputClaimsTransformation ReferenceId="Verification-CheckIfTOTPMFASelected" />
          </OutputClaimsTransformations>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="ValidateSelectedMfaOption" />
          </ValidationTechnicalProfiles>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>    

    <ClaimsProvider>
      <DisplayName>One time password technical profiles</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="AadSspr-SendCode">
          <DisplayName>Send Code</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">SendCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="emailAddress" />
          </InputClaims>
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-VerifyCode">
          <DisplayName>Verify Code</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="verificationCode" />
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="emailAddress" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Application Insights</DisplayName>
      <TechnicalProfiles>

        <TechnicalProfile Id="AzureInsights-Common">
          <Metadata>
            <!-- The ApplicationInsights instrumentation key which will be used for logging the events -->
            <Item Key="InstrumentationKey">{Settings:AppInsightsInstrumentationKey}</Item>
            <!-- A Boolean that indicates whether developer mode is enabled. This controls how events are buffered. In a development environment with minimal event volume, enabling developer mode results in events being sent immediately to ApplicationInsights. -->
            <Item Key="DeveloperMode">{Settings:AppInsightsDeveloperMode}</Item>
            <!-- A Boolean that indicates whether telemetry should be enabled or not. -->
            <Item Key="DisableTelemetry ">{Settings:AppInsightsDisableTelemetry}</Item>
          </Metadata>
        </TechnicalProfile>

        <TechnicalProfile Id="AzureInsights-DfpResults">
          <InputClaims>
            <!-- An input claim with a PartnerClaimType="eventName" is required. This is used by the AzureApplicationInsightsProvider to create an event with the specified value. -->
            <InputClaim ClaimTypeReferenceId="EventType" PartnerClaimType="eventName" DefaultValue="DfpResults" />
            <InputClaim ClaimTypeReferenceId="dfp_Id" PartnerClaimType="{property:dfp_Id}" />
            <InputClaim ClaimTypeReferenceId="dfp_TransactionReferenceId" PartnerClaimType="{property:dfp_TransactionReferenceId}" />
            <InputClaim ClaimTypeReferenceId="dfp_merchantRuleDecision" PartnerClaimType="{property:dfp_merchantRuleDecision}" />
            <InputClaim ClaimTypeReferenceId="dfp_CorrelationId" PartnerClaimType="{property:dfp_CorrelationId}" />
            <InputClaim ClaimTypeReferenceId="isSignupFlow" PartnerClaimType="{property:IsSignUp}" />
            <InputClaim ClaimTypeReferenceId="dfp_riskScore" PartnerClaimType="{property:dfp_riskScore}" />
            <InputClaim ClaimTypeReferenceId="dfp_botScore" PartnerClaimType="{property:dfp_botScore}" />
            <InputClaim ClaimTypeReferenceId="dfp_DeviceId" PartnerClaimType="{property:dfp_DeviceId}" />
            <InputClaim ClaimTypeReferenceId="dfp_DeviceCountryCode" PartnerClaimType="{property:dfp_DeviceCountryCode}" />
            <InputClaim ClaimTypeReferenceId="dfp_DeviceState" PartnerClaimType="{property:dfp_DeviceState}" />
            <InputClaim ClaimTypeReferenceId="dfp_Proxy" PartnerClaimType="{property:dfp_Proxy}" />
            <InputClaim ClaimTypeReferenceId="dfp_TrueIp" PartnerClaimType="{property:dfp_TrueIp}" />
            <InputClaim ClaimTypeReferenceId="dfp_Carrier" PartnerClaimType="{property:dfp_Carrier}" />
            <InputClaim ClaimTypeReferenceId="dfp_EmailDomin" PartnerClaimType="{property:dfp_EmailDomin}" />
            <InputClaim ClaimTypeReferenceId="dfp_Rule" PartnerClaimType="{property:dfp_Rule}" />
            <InputClaim ClaimTypeReferenceId="dfp_ClauseName" PartnerClaimType="{property:dfp_ClauseName}" />
            <InputClaim ClaimTypeReferenceId="dfp_Observe_Log" PartnerClaimType="{property:dfp_Observe_Log}" />
          </InputClaims>
          <IncludeTechnicalProfile ReferenceId="AzureInsights-Common" />
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

  </ClaimsProviders>

  <UserJourneys>

    <UserJourney Id="SignUpOrSignIn-Custom">
      <OrchestrationSteps>

        <!-- Track that we have received an authentication request -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationRequest" TechnicalProfileReferenceId="AzureInsights-AuthenticationRequest" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection TargetClaimsExchangeId="ForgotPasswordExchange" />
            <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Check if the user has selected to sign in using one of the social providers -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="StartSignUpFlow" />
            <ClaimsExchange Id="ForgotPasswordExchange" TechnicalProfileReferenceId="StartPasswordResetFlow" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationInitiate" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!--Sample: Start the password reset flow-->
        <OrchestrationStep Order="6" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="PasswordReset-Custom" />
          </JourneyList>
        </OrchestrationStep>

        <!--Sample: Start the sign up flow-->
        <OrchestrationStep Order="7" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="SignUp-Custom" />
          </JourneyList>
        </OrchestrationStep>

        <!-- For social IDP authentication, attempt to find the user account in the directory. -->
        <!--<OrchestrationStep Order="8" Type="ClaimsExchange">
            <Preconditions>
              <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                <Value>authenticationSource</Value>
                <Value>localAccountAuthentication</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition>
            </Preconditions>
            <ClaimsExchanges>
              <ClaimsExchange Id="AADUserReadUsingAlternativeSecurityId" TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId-NoError" />
            </ClaimsExchanges>
          </OrchestrationStep>-->

        <!-- Track that the authentication step is completed -->
        <OrchestrationStep Order="8" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-AuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Show self-asserted page only if the directory does not have the user account already (i.e. we do not have an objectId).
            This can only happen when authentication happened using a social IDP. If local account was created or authentication done
            using ESTS in step 2, then an user account must exist in the directory by this time. -->
        <!-- <OrchestrationStep Order="9" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SelfAsserted-Social" TechnicalProfileReferenceId="SelfAsserted-Social" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

        <!-- This step reads any user attributes that we may not have received when authenticating using ESTS so they can be sent
            in the token. -->
        <OrchestrationStep Order="9" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- The previous step (SelfAsserted-Social) could have been skipped if there were no attributes to collect
               from the user. So, in that case, create the user in the directory if one does not already exist
               (verified using objectId which would be set from the last step if account was created in the directory. -->
        <!--<OrchestrationStep Order="11" Type="ClaimsExchange">
            <Preconditions>
              <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                <Value>objectId</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition>
            </Preconditions>
            <ClaimsExchanges>
              <ClaimsExchange Id="AADUserWrite" TechnicalProfileReferenceId="AAD-UserWriteUsingAlternativeSecurityId" />
            </ClaimsExchanges>
          </OrchestrationStep>-->

        <OrchestrationStep Order="10" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectIdFromSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="DFP-Verification" />
          </JourneyList>
        </OrchestrationStep>

        <!-- Register MFA if not configured before [mfaoptions is empty] - applicable for sign up and sign in-->

        <OrchestrationStep Order="11" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession-Any</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectIdFromSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

        <!--<!~~ Track that the mutifactor authentication step is initiated ~~>
        <OrchestrationStep Order="12" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-MultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ Phone verification: If MFA is not required, the next three steps (#16-#18) should be removed.
               This step checks whether there's a phone number on record,  for the user. If found, then the user is challenged to verify it. ~~>
        <OrchestrationStep Order="13" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMFASession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <!~~ <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                <Value>strongAuthenticationPhoneNumber</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition> ~~>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ Track that the mutifactor authentication step is completed ~~>
        <OrchestrationStep Order="14" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-MultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>-->

        <!-- Save MFA phone number: The precondition verifies whether the user provided a new number in the
               previous step. If so, then the phone number is stored in the directory for future authentication
               requests. -->
        <OrchestrationStep Order="12" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>newPhoneNumberEntered</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserWriteWithObjectId" TechnicalProfileReferenceId="AAD-UserWritePhoneNumberUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="13" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />

        <!-- Track that we have successfully sent a token -->
        <OrchestrationStep Order="14" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackTokenIssued" TechnicalProfileReferenceId="AzureInsights-TokenIssued" />
          </ClaimsExchanges>
        </OrchestrationStep>


      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
    <UserJourney Id="PasswordReset-Custom">
      <OrchestrationSteps>

        <!-- Track that we have received an authentication request -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationRequest" TechnicalProfileReferenceId="AzureInsights-AuthenticationRequest" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddress" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the authentication step is completed -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-AuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>        

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectIdFromSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="DFP-Verification" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession-Any</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

       <!-- <!~~ Track that the mutifactor authentication step is initiated ~~>
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-MultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ <OrchestrationStep Order="6" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify" />
          </ClaimsExchanges>
        </OrchestrationStep> ~~>        

        <!~~ Track that the mutifactor authentication step is completed ~~>
        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-MultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>-->

        <!-- Track that the password reset flow is started-->
        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackPasswordResetInitiate" TechnicalProfileReferenceId="AzureInsights-PasswordResetInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="8" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the password reset flow is completed-->
        <OrchestrationStep Order="9" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackPasswordResetComplete" TechnicalProfileReferenceId="AzureInsights-PasswordResetComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="10" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />

        <!-- Track that we have successfully sent a token -->
        <OrchestrationStep Order="11" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackTokenIssued" TechnicalProfileReferenceId="AzureInsights-TokenIssued" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
    <UserJourney Id="ProfileEdit-Custom">
      <OrchestrationSteps>

        <!-- Track that we have received an authentication request -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationRequest" TechnicalProfileReferenceId="AzureInsights-AuthenticationRequest" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection TargetClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationInitiate" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!--<OrchestrationStep Order="6" Type="ClaimsExchange">
            <Preconditions>
              <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                <Value>authenticationSource</Value>
                <Value>localAccountAuthentication</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition>
            </Preconditions>
            <ClaimsExchanges>
              <ClaimsExchange Id="AADUserRead" TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId" />
            </ClaimsExchanges>
          </OrchestrationStep>-->

        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the authentication step is completed -->
        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-AuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="8" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectIdFromSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="DFP-Verification" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="9" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession-Any</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

        <!--<!~~ Track that the mutifactor authentication step is initiated ~~>
        <OrchestrationStep Order="9" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-MultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ If the user ever stepped up to use 2FA, profile update must verify this because the user will be able to change
            their sign in email address or strong authentication email here. This guards against scenarios where a user's
            password is stolen, the attacker can change the email addresses leaving no way for the user to recover their account.
            By requiring 2FA, stolen passwords cannot be used to take over the account completely. ~~>
        <OrchestrationStep Order="10" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ Track that the mutifactor authentication step is completed ~~>
        <OrchestrationStep Order="11" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-MultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>-->

        <!-- Track that the profile edit step is initiated -->
        <OrchestrationStep Order="10" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackProfileEditInitiate" TechnicalProfileReferenceId="AzureInsights-ProfileEditInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="11" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="B2CUserProfileUpdateExchange" TechnicalProfileReferenceId="SelfAsserted-ProfileUpdate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the profile edit step is completed -->
        <OrchestrationStep Order="12" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackProfileEditComplete" TechnicalProfileReferenceId="AzureInsights-ProfileEditComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="13" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />

        <!-- Track that we have successfully sent a token -->
        <OrchestrationStep Order="14" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackTokenIssued" TechnicalProfileReferenceId="AzureInsights-TokenIssued" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>

    <UserJourney Id="ChangeMfa-UserJourney">
      <OrchestrationSteps>

        <!-- Track that we have received an authentication request -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationRequest" TechnicalProfileReferenceId="AzureInsights-AuthenticationRequest" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection TargetClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationInitiate" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>selectedIdp</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackIdpAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-IdpAuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!--<OrchestrationStep Order="6" Type="ClaimsExchange">
            <Preconditions>
              <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
                <Value>authenticationSource</Value>
                <Value>localAccountAuthentication</Value>
                <Action>SkipThisOrchestrationStep</Action>
              </Precondition>
            </Preconditions>
            <ClaimsExchanges>
              <ClaimsExchange Id="AADUserRead" TechnicalProfileReferenceId="AAD-UserReadUsingAlternativeSecurityId" />
            </ClaimsExchanges>
          </OrchestrationStep>-->

        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the authentication step is completed -->
        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackAuthenticationComplete" TechnicalProfileReferenceId="AzureInsights-AuthenticationComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="8" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectIdFromSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>authenticationSource</Value>
              <Value>socialIdpAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="DFP-Verification" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="9" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession-Any</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="10" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="ChangeMFA-SubJourney" />
          </JourneyList>
        </OrchestrationStep>        

        <OrchestrationStep Order="11" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />

        <!-- Track that we have successfully sent a token -->
        <OrchestrationStep Order="12" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackTokenIssued" TechnicalProfileReferenceId="AzureInsights-TokenIssued" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>


  </UserJourneys>
  <SubJourneys>
    <SubJourney Id="SignUp-Custom" Type="Call">
      <OrchestrationSteps>

        <!-- Track that the sign up step is initiated -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackSignUpInitiate" TechnicalProfileReferenceId="AzureInsights-SignUpInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail-DFP" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the sign up step is completed -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackSignUpComplete" TechnicalProfileReferenceId="AzureInsights-SignUpComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="PasswordReset-Custom" Type="Call">
      <OrchestrationSteps>
        <!--Sample: Validate user's email address. Run this step only when user resets the password-->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddress-Custom" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="DFP-Verification" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession-Any</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

        <!--<!~~ Track that the mutifactor authentication step is initiated ~~>
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-MultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveMfaSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!~~ Track that the mutifactor authentication step is completed ~~>
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-MultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>-->

        <!-- Track that the password reset flow is started-->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackPasswordResetInitiate" TechnicalProfileReferenceId="AzureInsights-PasswordResetInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!--Sample: Collect and persist a new password. Run this step only when user resets the password-->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the password reset flow is completed-->
        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackPasswordResetComplete" TechnicalProfileReferenceId="AzureInsights-PasswordResetComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="DFP-Verification" Type="Call">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>bearerToken</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AcquireAccessToken" TechnicalProfileReferenceId="REST-AcquireAccessToken" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Dfp-LoginAccount" TechnicalProfileReferenceId="RestApi-DFP-LoginAccount" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>authenticationSource</Value>
              <Value>localAccountAuthentication</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackDfpResults" TechnicalProfileReferenceId="AzureInsights-DfpResults" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Reject</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Dfp-LoginAccountStatus-Rejected" TechnicalProfileReferenceId="RestApi-DFP-LoginAccountStatus-Rejected" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Approve</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Dfp-LoginAccountStatus-Approved" TechnicalProfileReferenceId="RestApi-DFP-LoginAccountStatus-Approved" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Challenge</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Dfp-LoginAccountStatus-Pending" TechnicalProfileReferenceId="RestApi-DFP-LoginAccountStatus-Pending" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="7" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Reject</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ShowMessage-SignInRejected" TechnicalProfileReferenceId="SelfAsserted-ShowMessage-SignInRejected" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="8" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Reject</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ShowMessage-SignupRejected" TechnicalProfileReferenceId="SelfAsserted-ShowMessage-SignupRejected" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="9" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Challenge</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="EnforceMFA" />
          </JourneyList>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="9" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Challenge</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

        <OrchestrationStep Order="10" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isSignupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>dfp_merchantRuleDecision</Value>
              <Value>Challenge</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Dfp-LoginAccountStatus-Approved-AfterChallenge" TechnicalProfileReferenceId="RestApi-DFP-LoginAccountStatus-Approved" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="EnforceMFA" Type="Call">
      <OrchestrationSteps>
        <!-- Track that the mutifactor authentication step is initiated -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-MultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <!--To skip MFA registration during password reset flow -->
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isPasswordResetFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="RegisterMFA-SubJourney" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="ChallengeMFA-SubJourney" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="SetisActiveMfaSessionAnyExchange" TechnicalProfileReferenceId="TP-EnforceMfaExecuted" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Track that the mutifactor authentication step is completed -->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-MultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="RegisterMFA-SubJourney" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveEmailSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="VerifyEmailBeforeSettingNewMfa" TechnicalProfileReferenceId="LocalAccount-VerifyEmail-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="MFARegisterSelect" TechnicalProfileReferenceId="MFA-Register-Select" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>totpMFASelected</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>totpMFASelected</Value>
              <Value>False</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="TotpFactor-RegisterInput-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>smsMFASelected</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>smsMFASelected</Value>
              <Value>False</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="MFA-SMS-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="4" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>emailMFASelected</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>emailMFASelected</Value>
              <Value>False</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="Email-RegisterInput-NoSSO" />
          </JourneyList>
        </OrchestrationStep> -->

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="ChallengeMFA-SubJourney" Type="Call">
      <OrchestrationSteps>

        <!-- <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="RegisteredMfaOptionsCollectionExchange" TechnicalProfileReferenceId="GetRegisteredMfaOptionsCollection" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="IdentifyNumberOfRegisteredMfaActions" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>numberOfRegisteredMfa</Value>
              <Value>1</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="MFAVerifyAutoSelect" TechnicalProfileReferenceId="MFA-Verify-AutoSelect" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>numberOfRegisteredMfa</Value>
              <Value>1</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="MFAVerifySelect" TechnicalProfileReferenceId="MFA-Verify-Select" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="2" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.mfa">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection TargetClaimsExchangeId="TotpMfaExchange" />
            <ClaimsProviderSelection TargetClaimsExchangeId="PhoneMfaExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange" ContentDefinitionReferenceId="api.idpselections.mfa">
          <ClaimsExchanges>
            <ClaimsExchange Id="TotpMfaExchange" TechnicalProfileReferenceId="VerifyMFA-SetMfaOption-Totp" />
            <ClaimsExchange Id="PhoneMfaExchange" TechnicalProfileReferenceId="VerifyMFA-SetMfaOption-Phone" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

        <OrchestrationStep Order="4" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_TOTP</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_TOTP</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="MFA-TOTP-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_Phone</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_Phone</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="MFA-SMS-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_Email</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Verify_MFAOption_Email</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isActiveEmailSession</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="Email-Mfa-NoSSO" TechnicalProfileReferenceId="LocalAccount-VerifyEmail-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="IdentifyNumberOfRegisteredMfaActions" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="SetRegisteredMFADefaultValue" TechnicalProfileReferenceId="SetRegisteredMFADefaultValue" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- If user has any registered mfa, Get it as collection-->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="RegisteredMfaOptionsCollectionExchange" TechnicalProfileReferenceId="GetRegisteredMfaOptionsCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Extract each registered mfa from the collection-->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ExtractRegisteredMfaExchange" TechnicalProfileReferenceId="ExtractRegisteredMfaFromMfaOptionsCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Calculate numberOfRegisteredMfa -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>totpMFASelected</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="IncrementNumberOfRegisteredMfa-Totp" TechnicalProfileReferenceId="IncrementNumberOfRegisteredMfa" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>emailMFASelected</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="IncrementNumberOfRegisteredMfa-Email" TechnicalProfileReferenceId="IncrementNumberOfRegisteredMfa" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>smsMFASelected</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="IncrementNumberOfRegisteredMfa-Phone" TechnicalProfileReferenceId="IncrementNumberOfRegisteredMfa" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="TotpFactor-InputOrVerify-NoSSO" Type="Call">
      <OrchestrationSteps>

        <!-- Set the required claims numberOfAvailableDevices and totpIdentifier-->
        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="SetTotpInitialValue" />
          </JourneyList>
        </OrchestrationStep>

        <!-- If current user is not a new one (this is a sign-in flow, and not sign-up),
             check the number of available devices. -->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <!-- <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>newUser</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions> -->
          <ClaimsExchanges>
            <ClaimsExchange Id="CheckAvailableDevices" TechnicalProfileReferenceId="AzureMfa-GetAvailableDevices" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- If the number of available devices is zero (user hasn't enrolled before),
            render the TOTP enrollment page to scan the QR code that starts the enrollment process -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>numberOfAvailableDevices</Value>
              <Value>0</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AuthenticatorForSignUp" TechnicalProfileReferenceId="EnableOTPAuthentication-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- If the number of available devices is zero (user hasn't enrolled before),
             render the TOTP verification page.  -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>numberOfAvailableDevices</Value>
              <Value>0</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AuthenticatorForSignIn" TechnicalProfileReferenceId="OTPVerification-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="TotpFactor-RegisterInput-NoSSO" Type="Call">
      <OrchestrationSteps>

        <!-- Set the required claims numberOfAvailableDevices and totpIdentifier-->
        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="SetTotpInitialValue" />
          </JourneyList>
        </OrchestrationStep>

        <!-- If the number of available devices is zero (user hasn't enrolled before),
            render the TOTP enrollment page to scan the QR code that starts the enrollment process -->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AuthenticatorForSignUp" TechnicalProfileReferenceId="EnableOTPAuthentication-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="ClaimTransformationExchange-AddTOTPToMFAOptionsPartialCollection" TechnicalProfileReferenceId="TP-AddTOTPToMFAOptionsPartialCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserWriteTOTPMFAOptionsPartialUsingObjectId" TechnicalProfileReferenceId="AAD-UserWriteMFAOptionsPartialUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <!-- <SubJourney Id="Email-RegisterInput-NoSSO" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="ClaimTransformationExchange-AddEmailToMFAOptionsPartialCollection" TechnicalProfileReferenceId="TP-AddEmailToMFAOptionsPartialCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserWriteTOTPMFAOptionsPartialUsingObjectId" TechnicalProfileReferenceId="AAD-UserWriteMFAOptionsPartialUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney> -->

    <SubJourney Id="MFA-TOTP-NoSSO" Type="Call">
      <OrchestrationSteps>
        <!-- Call the TOTP enrollment ub journey. If user already enrolled the sub journey will not ask the user to enroll -->
        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="TotpFactor-InputOrVerify-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ClaimTransformationExchange-AddTOTPToMFAOptionsPartialCollection" TechnicalProfileReferenceId="TP-AddTOTPToMFAOptionsPartialCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserWriteTOTPMFAOptionsPartialUsingObjectId" TechnicalProfileReferenceId="AAD-UserWriteMFAOptionsPartialUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>

    </SubJourney>

    <SubJourney Id="SetTotpInitialValue" Type="Call">
      <OrchestrationSteps>

        <!-- If number of available device claim not exists, set the value to 0-->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>numberOfAvailableDevices</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetTotpDefaultValue" TechnicalProfileReferenceId="SetTotpDefaultValue" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- The following orchestration steps try to get the user identifier for different
             type of authentication, such as local and social account.-->

        <!-- Get the identifier from email-->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>totpIdentifier</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>email</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetTotpIdentifierAsEmail" TechnicalProfileReferenceId="CreateTotpIdentifier-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Get the identifier from otherMails-->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>totpIdentifier</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>otherMails</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetTotpIdentifierAsEmailFromOtherMail" TechnicalProfileReferenceId="CreateTotpIdentifier-OtherMail" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Get the identifier from local account sign-in name-->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>totpIdentifier</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>signInName</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetTotpIdentifierAsSignInName" TechnicalProfileReferenceId="CreateTotpIdentifier-SignInName" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="MFA-SMS-NoSSO" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Value>False</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Input" TechnicalProfileReferenceId="PhoneFactor-InputOnly-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="true">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="PhoneFactor-Verify" TechnicalProfileReferenceId="PhoneFactor-InputOrVerify-NoSSO" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>newPhoneNumberEntered</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ClaimTransformationExchange-AddSMSToMFAOptionsPartialCollection" TechnicalProfileReferenceId="TP-AddSMSToMFAOptionsPartialCollection" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>newPhoneNumberEntered</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>isMFAConfigurationSetupFlow</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserWritePhoneAndMFAOptionPartialWithObjectId" TechnicalProfileReferenceId="AAD-UserWritePhoneNumberAndMFAOptionPartialUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="SetMfaActions" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="IdentifyNumberOfRegisteredMfaActions" />
          </JourneyList>
        </OrchestrationStep>

        <!-- if numberOfRegisteredMfa=0, Available mfa action is only 'Add' -->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>numberOfRegisteredMfa</Value>
              <Value>0</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetAvailableMfaActions-Add" TechnicalProfileReferenceId="SetAvailableMfaActions-Add" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- if numberOfRegisteredMfa=1 Available mfa actions are 'Add/Update' -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>numberOfRegisteredMfa</Value>
              <Value>1</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetAvailableMfaActions-Add-Update" TechnicalProfileReferenceId="SetAvailableMfaActions-Add-Update" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- if numberOfRegisteredMfa=2, Available mfa actions are 'Update/Remove' -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>numberOfRegisteredMfa</Value>
              <Value>2</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SetAvailableMfaActions-Update-Remove" TechnicalProfileReferenceId="SetAvailableMfaActions-Update-Remove" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="ChangeMFA-SubJourney" Type="Call">
      <OrchestrationSteps>

        <!-- Track that the change mfa step is initiated -->
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackChangeMultifactorInitiate" TechnicalProfileReferenceId="AzureInsights-ChangeMultifactorInitiate" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="SetMfaActions" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.mfa.selector">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>changeMfa_AvailableActions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsProviderSelections DisplayOption="ShowSingleProvider">
            <ClaimsProviderSelection TargetClaimsExchangeId="MfaActionExchange-Add" />
            <ClaimsProviderSelection TargetClaimsExchangeId="MfaActionExchange-Update" />
            <ClaimsProviderSelection TargetClaimsExchangeId="MfaActionExchange-Remove" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange" ContentDefinitionReferenceId="api.idpselections.mfa.selector">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>changeMfa_AvailableActions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="MfaActionExchange-Add" TechnicalProfileReferenceId="SetChangeMfaAction-Add" />
            <ClaimsExchange Id="MfaActionExchange-Update" TechnicalProfileReferenceId="SetChangeMfaAction-Update" />
            <ClaimsExchange Id="MfaActionExchange-Remove" TechnicalProfileReferenceId="SetChangeMfaAction-Remove" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>changeMfa_Action</Value>
              <Value>remove</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="RemoveRegisteredMfaOptions" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>changeMfa_Action</Value>
              <Value>add</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="RegisterNewMfaOptions" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="7" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>changeMfa_Action</Value>
              <Value>update</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="UpdateRegisteredMfaOptions" />
          </JourneyList>
        </OrchestrationStep>        

        <!-- Track that the change mfa step is completed -->
        <OrchestrationStep Order="8" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TrackChangeMultifactorComplete" TechnicalProfileReferenceId="AzureInsights-ChangeMultifactorComplete" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- <OrchestrationStep Order="7" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="SelfAssertedShowMfaSuccessfulExchange" TechnicalProfileReferenceId="SelfAsserted-ShowMessage-MfaUpdateSuccessful" />
          </ClaimsExchanges>
        </OrchestrationStep> -->

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="RegisterNewMfaOptions-SetClaimsProvider-TotpSms" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.mfa.add">
          <ClaimsProviderSelections DisplayOption="ShowSingleProvider">
            <ClaimsProviderSelection TargetClaimsExchangeId="TotpMfaExchange" />
            <ClaimsProviderSelection TargetClaimsExchangeId="PhoneMfaExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange" ContentDefinitionReferenceId="api.idpselections.mfa.add">
          <ClaimsExchanges>
            <ClaimsExchange Id="TotpMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Totp-IfAbsent" />
            <ClaimsExchange Id="PhoneMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Phone-IfAbsent" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="RegisterNewMfaOptions" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="RegisterNewMfaOptions-SetClaimsProvider-TotpSms" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TP-SetMFASetupFlowExchange" TechnicalProfileReferenceId="TP-SetMFASetupFlow" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>MFAOptions</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="TP-CopyMFAOptionsToMFAOptionsPartialExchange" TechnicalProfileReferenceId="TP-CopyMFAOptionsToMFAOptionsPartial" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="MFA-SMS-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="TotpFactor-RegisterInput-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="RemoveRegisteredMfaOptions" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.mfa.remove">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection TargetClaimsExchangeId="TotpMfaExchange" />
            <ClaimsProviderSelection TargetClaimsExchangeId="PhoneMfaExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange" ContentDefinitionReferenceId="api.idpselections.mfa.remove">
          <ClaimsExchanges>
            <ClaimsExchange Id="TotpMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Totp" />
            <ClaimsExchange Id="PhoneMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Phone" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="RemovePhoneFromUserMfaOptionsExchange" TechnicalProfileReferenceId="RemovePhoneFromUserMfaOptions" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="RemoveTotpFromUserMfaOptionsExchange" TechnicalProfileReferenceId="RemoveTotpFromUserMfaOptions" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADWriteUserMfaOptionsByObjectIdExchange" TechnicalProfileReferenceId="AAD-WriteMfaOptionsUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="UpdateRegisteredMfaOptions" Type="Call">
      <OrchestrationSteps>

        <OrchestrationStep Order="1" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.mfa.update">
          <ClaimsProviderSelections DisplayOption="ShowSingleProvider">
            <ClaimsProviderSelection TargetClaimsExchangeId="TotpMfaExchange" />
            <ClaimsProviderSelection TargetClaimsExchangeId="PhoneMfaExchange" />
          </ClaimsProviderSelections>
        </OrchestrationStep>

        <OrchestrationStep Order="2" Type="ClaimsExchange" ContentDefinitionReferenceId="api.idpselections.mfa.update">
          <ClaimsExchanges>
            <ClaimsExchange Id="TotpMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Totp" />
            <ClaimsExchange Id="PhoneMfaExchange" TechnicalProfileReferenceId="ChangeMfa-SetMfaOption-Phone" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TP-SetMFASetupFlowExchange" TechnicalProfileReferenceId="TP-SetMFASetupFlow" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="TP-CopyMFAOptionsToMFAOptionsPartialExchange" TechnicalProfileReferenceId="TP-CopyMFAOptionsToMFAOptionsPartial" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="5" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_Phone</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="MFA-SMS-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="InvokeSubJourney">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimEquals" ExecuteActionsIf="false">
              <Value>Change_MFAOption_TOTP</Value>
              <Value>True</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <JourneyList>
            <Candidate SubJourneyReferenceId="TotpFactor-RegisterInput-NoSSO" />
          </JourneyList>
        </OrchestrationStep>

      </OrchestrationSteps>
    </SubJourney>

  </SubJourneys>


</TrustFrameworkPolicy>
